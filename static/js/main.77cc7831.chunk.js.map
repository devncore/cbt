{"version":3,"sources":["reportWebVitals.js","components/portal/MenuButton.jsx","components/portal/MenuTabs.jsx","components/portal/TopLayer.jsx","components/portal/MenuTreeView.jsx","components/portal/LeftMenuHeader.jsx","components/portal/LeftLayer.jsx","components/cbt/NextButton.jsx","components/cbt/BackButton.jsx","components/cbt/InningCheckboxs.jsx","components/cbt/SubjectCheckboxs.jsx","components/cbt/TestTypeSelector.jsx","components/cbt/CbtStepper.jsx","components/cbt/ResetIconButton.jsx","pages/Cbt.jsx","pages/Test.jsx","pages/Dashboard.jsx","apps/Login.jsx","apps/Completed.jsx","pages/Profile.jsx","pages/ProfileUpdate.jsx","components/users/UserProfileBox.jsx","pages/Users.jsx","apps/Portal.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MenuButton","props","open","menuClick","IconButton","size","edge","color","sx","mr","onClick","MenuTabs","history","useHistory","e","menu","push","value","Box","width","map","Button","variant","children","name","style","backgroundColor","createButton","TopLayer","openChanged","AppBar","position","elevation","zIndex","Toolbar","flexGrow","display","xs","md","MinusSquare","SvgIcon","fontSize","height","d","PlusSquare","CloseSquare","TransitionComponent","useSpring","from","opacity","transform","to","in","div","Collapse","StyledTreeItem","styled","TreeItem","theme","treeItemClasses","iconContainer","group","marginLeft","paddingLeft","borderLeft","alpha","palette","text","primary","content","paddingTop","paddingBottom","fontFamily","join","MenuTreeView","React","setText","fetch","res","blob","load","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","maxWidth","margin","overflowY","getNodes","parentId","filter","x","item","type","pageId","nodeId","toString","label","FireNav","List","paddingRight","minWidth","marginRight","LeftMenuHeader","component","disablePadding","ListItemButton","href","ListItemIcon","ListItemText","my","primaryTypographyProps","fontWeight","letterSpacing","LeftLayer","Drawer","flexShrink","boxSizing","anchor","Divider","NextButton","mt","BackBUtton","InningCheckboxs","cbtId","innings","required","isChecked","length","borderTop","borderRight","borderRadius","marginTop","marginBottom","padding","i","borderBottom","FormControlLabel","Typography","year","inning","control","Checkbox","defaultChecked","onChange","event","id","console","log","target","checked","handleChange1","SubjectCheckboxs","subjects","testId","subjectName","find","TestCountSelector","testTypes","current","count","RadioGroup","defaultValue","radioChanged","comment","Radio","CbtStepper","useLocation","search","useState","activeStep","setActiveStep","firstChecked","setFirstChecked","secondChecked","setSecondChecked","useEffect","handleNext","prevActiveStep","handleBack","Stepper","orientation","Step","StepLabel","StepContent","mb","disabled","Stack","direction","spacing","Chip","getSelectedInning","subject","getSelectedSubject","testType","getTestCount","start","ResetIconButton","icon","Paper","typography","body2","textAlign","secondary","Cbt","setInnings","setSubjects","setTestTypes","stepCompleted","_innings","_subjects","_testTypes","top","title","allowSubjects","s","sort","sessionStorage","setItem","Test","currentSubject","testCount","getItem","getAnswer","answers","answer","isAnswer","includes","slice","className","border","question","infos","info","src","FormGroup","items","example","seq","Dashboard","Login","window","location","Completed","cookies","Cookies","URLSearchParams","get","set","Profile","userInfo","setUserInfo","examResult","SetExamResult","data","data2","requestOptions","method","headers","Axios","post","process","SERVICE_URL","response","eRes","userId","ining","elective","problemCount","resultCount","created","catch","error","userName","email","phone","blog","gitHubId","school","ProfileUpdate","aboutMe","TextField","multiline","rows","UserProfileBox","user","index","Grid","lg","sm","userClick","container","Math","floor","random","Badge","badgeContent","Users","users","setUsers","UserId","createTheme","Portal","setOpen","titles","setTitles","getName","Main","shouldForwardProp","prop","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","getCbt","ThemeProvider","changedValue","path","render","exact","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.77cc7831.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\n// import { makeStyles, useTheme } from \"@mui/styles\";\r\nimport { IconButton } from '@mui/material';\r\n\r\nexport default function MenuButton(props) {\r\n    const { open, menuClick } = props;\r\n    // const theme = useTheme();\r\n    // const useStyles = makeStyles((theme) => ({ }));\r\n    // const classes = useStyles();\r\n\r\n    return (\r\n        <IconButton size=\"large\"\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    sx={{ mr: 2 }}\r\n                    onClick={menuClick}>\r\n            {open ? <ChevronLeftIcon /> : <MenuIcon />}\r\n        </IconButton>\r\n    );\r\n\r\n}","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { Button } from '@mui/material';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function MenuTabs() {\r\n    let history = useHistory();\r\n\r\n    const menus = [\r\n        { \r\n            \"name\": \"자격증\",\r\n            \"value\": \"cbt\"\r\n        },\r\n        { \r\n            \"name\": \"프로그래밍\",\r\n            \"value\": \"dev\"\r\n        },\r\n        { \r\n            \"name\": \"유저\",\r\n            \"value\": \"users\"\r\n        },\r\n        { \r\n            \"name\": \"로그인\",\r\n            \"value\": \"login\"\r\n        }\r\n    ];\r\n\r\n    function createButton(menu) {\r\n        const button = \r\n            <Button \r\n                key={menu.value}\r\n                variant=\"raised\"\r\n                size=\"small\" \r\n                color=\"link\" \r\n                children={menu.name}\r\n                onClick={(e) => menuClick(e, menu)}\r\n                style={{ backgroundColor: 'transparent' }}/>\r\n        return button;\r\n    }\r\n\r\n    const menuClick = (e, menu) => {\r\n        history.push(`/${menu.value}`);\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            {menus.map(menu => {\r\n                return createButton(menu);\r\n            })}            \r\n        </Box>\r\n    );\r\n}\r\n","import React from 'react';\r\n// import { makeStyles, useTheme } from \"@mui/styles\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Box from '@mui/material/Box';\r\nimport MenuButton from './MenuButton';\r\n\r\nimport MenuTabs from './MenuTabs.jsx';\r\n\r\nexport default function TopLayer(props) {\r\n    const { open, openChanged } = props;\r\n    // const theme = useTheme();\r\n    // const useStyles = makeStyles((theme) => ({ }));\r\n    // const classes = useStyles();\r\n\r\n    function menuClick() {\r\n        openChanged(!open);\r\n    }\r\n\r\n    return (\r\n        <AppBar position={'relative'} elevation={1} sx={{ zIndex: 10000 }}>\r\n            <Toolbar variant=\"dense\">\r\n                <MenuButton menuClick={menuClick}/>\r\n                <MenuTabs/>\r\n                <Box sx={{ flexGrow: 1 }} />\r\n                <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import * as React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { load } from 'js-yaml';\r\nimport PropTypes from 'prop-types';\r\nimport SvgIcon from '@mui/material/SvgIcon';\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\n\r\nfunction MinusSquare(props) {\r\n  return (\r\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14, color: '#333333' }} {...props}>\r\n      <path d=\"M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction PlusSquare(props) {\r\n  return (\r\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14, color: '#333333' }} {...props}>\r\n      <path d=\"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction CloseSquare(props) {\r\n  return (\r\n    <SvgIcon\r\n      fontSize=\"inherit\"\r\n      style={{ width: 14, height: 14, color: '#34568B' }}\r\n      {...props}\r\n    >\r\n      <path d=\"M20 5L20 19L4 19L4 5H20M20 3H4C2.89 3 2 3.89 2 5V19C2 20.11 2.89 21 4 21H20C21.11 21 22 20.11 22 19V5C22 3.89 21.11 3 20 3M18 15H6V17H18V15M10 7H6V13H10V7M12 9H18V7H12V9M18 11H12V13H18V11Z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction TransitionComponent(props) {\r\n  const style = useSpring({\r\n    from: {\r\n      opacity: 0,\r\n      transform: 'translate3d(20px,0,0)',\r\n    },\r\n    to: {\r\n      opacity: props.in ? 1 : 0,\r\n      transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <animated.div style={style}>\r\n      <Collapse {...props} />\r\n    </animated.div>\r\n  );\r\n}\r\n\r\nTransitionComponent.propTypes = {\r\n  /**\r\n   * Show the component; triggers the enter or exit states\r\n   */\r\n  in: PropTypes.bool,\r\n};\r\n\r\nconst StyledTreeItem = styled((props) => (\r\n    <TreeItem {...props} TransitionComponent={TransitionComponent} />))(({ theme }) => ({\r\n        [`& .${treeItemClasses.iconContainer}`]: {\r\n            '& .close': {\r\n                opacity: 0.3,\r\n            },\r\n        },\r\n        [`& .${treeItemClasses.group}`]: {\r\n            marginLeft: 15,\r\n            paddingLeft: 0,\r\n            borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.2)}`,\r\n        },\r\n        [`& .${treeItemClasses.content}`]: {\r\n            '& .MuiTreeItem-label': {\r\n                paddingTop: '4px',\r\n                paddingBottom: '4px',\r\n                paddingLeft: '0px',\r\n                fontSize: '12px',\r\n                marginLeft: 0,\r\n                fontFamily: [\r\n                    '-apple-system',\r\n                    'BlinkMacSystemFont',\r\n                    '\"Segoe UI\"',\r\n                    'Roboto',\r\n                    '\"Helvetica Neue\"',\r\n                    'Arial',\r\n                    'sans-serif',\r\n                    '\"Apple Color Emoji\"',\r\n                    '\"Segoe UI Emoji\"',\r\n                    '\"Segoe UI Symbol\"',\r\n                ].join(','),\r\n            },\r\n        },\r\n}));\r\n\r\nexport default function MenuTreeView(props) {\r\n    const [text, setText] = React.useState([]);\r\n    \r\n    React.useEffect(() => {\r\n      fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/menus.yaml')\r\n      .then(res => res.blob())\r\n      .then(blob => blob.text())\r\n      .then(res => {\r\n          setText(load(res));\r\n      });\r\n    }, []);\r\n    \r\n    const history = useHistory();\r\n\r\n    function menuClick(e, item) {\r\n        if(item.type === 'W') {\r\n            history.push(`/cbt/id=${item.pageId}`);\r\n        }\r\n    }\r\n\r\n    function getNodes(parentId) {\r\n        var source = text.filter(x => x.parentId === parentId).map(item => {\r\n            return (\r\n                <StyledTreeItem \r\n                    key={item.nodeId.toString()}\r\n                    onClick={(e) => menuClick(e, item)}\r\n                    nodeId={item.nodeId.toString()} \r\n                    label={item.label}>\r\n                    {getNodes(item.nodeId.toString())}\r\n                </StyledTreeItem>\r\n             );\r\n        });\r\n        return source;\r\n    } \r\n\r\n    return (\r\n        <TreeView\r\n            defaultExpanded={['1', '2', '3', '4', '5']}\r\n            defaultCollapseIcon={<MinusSquare />}\r\n            defaultExpandIcon={<PlusSquare />}\r\n            defaultEndIcon={<CloseSquare />}\r\n            sx={{ height: 264, flexGrow: 1, maxWidth: 400, margin: '0px', overflowY: 'auto' }}>\r\n            {getNodes(\"-1\")}\r\n        </TreeView>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport PlaylistAddCheckIcon from '@mui/icons-material/PlaylistAddCheck';\r\n\r\nconst FireNav = styled(List)({\r\n  '& .MuiListItemButton-root': {\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    backgroundColor: '#fcfcfc'\r\n  },\r\n  '& .MuiListItemIcon-root': {\r\n    minWidth: 0,\r\n    marginRight: 5,\r\n  },\r\n  '& .MuiSvgIcon-root': {\r\n    fontSize: 0,\r\n  },\r\n});\r\n\r\nexport default function LeftMenuHeader(props) {\r\n    return (\r\n        <FireNav component=\"nav\" disablePadding>\r\n          <ListItemButton component=\"a\" href=\"#customized-list\">\r\n              <ListItemIcon sx={{ fontSize: 20 }}><PlaylistAddCheckIcon/></ListItemIcon>\r\n              <ListItemText\r\n                sx={{ my: 0 }}\r\n                primary=\"필기시험 기출문제 목록\"\r\n                primaryTypographyProps={{\r\n                  fontSize: 14,\r\n                  fontWeight: 'medium',\r\n                  letterSpacing: 0,\r\n                }}\r\n              />\r\n            </ListItemButton>\r\n        </FireNav>\r\n    );\r\n}","import React from 'react';\r\n// import { makeStyles, useTheme } from \"@mui/styles\";\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\n\r\nimport MenuTreeView from './MenuTreeView.jsx';\r\nimport LeftMenuHeader from './LeftMenuHeader.jsx';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function LeftLayer(props) {\r\n    const { open } = props;\r\n\r\n\r\n    return (\r\n        <Drawer sx={{\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            '& .MuiDrawer-paper': {\r\n              width: drawerWidth,\r\n              boxSizing: 'border-box',\r\n              position: 'absolute',\r\n                },\r\n            }}\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}>\r\n                <LeftMenuHeader/>\r\n                <Divider />\r\n                <MenuTreeView/>\r\n        </Drawer>\r\n    );\r\n}","import Button from \"@mui/material/Button\";\r\n\r\nexport default function NextButton(props) {\r\n    const { children = 'Next' } = props;\r\n\r\n    return (\r\n        <Button \r\n            {...props} \r\n            children={children}\r\n            variant=\"contained\"\r\n            sx={{ mt: 1, mr: 1 }}/>    \r\n    );\r\n}","import Button from \"@mui/material/Button\";\r\n\r\nexport default function BackBUtton(props) {\r\n    return (\r\n        <Button \r\n            {...props} \r\n            children={\"Back\"}\r\n            sx={{ mt: 1, mr: 1 }}/>    \r\n    );\r\n}","import * as React from 'react';\r\nimport {useLocation} from \"react-router-dom\";\r\nimport Box from '@mui/material/Box';\r\nimport { load } from 'js-yaml';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { Typography } from '@mui/material';\r\n\r\nexport default function InningCheckboxs(props) {\r\n    const cbtId = props.cbtId;\r\n    const innings = props.innings;\r\n\r\n  const handleChange1 = (event, id) => {\r\n      console.log('id: ', event.target.checked);\r\n      innings.filter(x=>x.id == id)[0].isChecked = event.target.checked;\r\n      console.log('checked:', innings.filter(x=>x.isChecked).length);\r\n\r\n      props.required(innings.filter(x=>x.isChecked).length > 0);\r\n  };\r\n  props.required(innings.filter(x=>x.isChecked).length > 0);\r\n\r\n  return (\r\n    <div style={{ backgroundColor: '#ffffff', \r\n                  borderTop: '1px solid #dddddd', \r\n                  borderLeft: '1px solid #dddddd', \r\n                  borderRight: '1px solid #dddddd', \r\n                  borderRadius: 0, \r\n                  marginTop: 20,\r\n                  marginBottom: 20,\r\n                  padding: '0px 0px 0px 0px',}}>\r\n        {innings.map((x, i) => {\r\n            return (\r\n              <div key={x.id} style={{ borderBottom: '1px solid #eeeeee'}}>\r\n                  <FormControlLabel\r\n                      label={<Typography children={x.year + '년 - ' + x.inning + '회'} variant=\"subtitle2\"/>}\r\n                      control={<Checkbox \r\n                                    defaultChecked={x.isChecked}\r\n                                    style={{ marginLeft: '20px'}} \r\n                                    onChange={(event) => handleChange1(event, x.id)}/>}/>\r\n              </div>\r\n            );\r\n        })}\r\n      \r\n    </div>\r\n  );\r\n}","import * as React from 'react';\r\nimport {useLocation} from \"react-router-dom\";\r\nimport Box from '@mui/material/Box';\r\nimport { load } from 'js-yaml';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { Typography } from '@mui/material';\r\n\r\nexport default function SubjectCheckboxs(props) {\r\n    const cbtId = props.cbtId;\r\n    const subjects = props.subjects;\r\n\r\n    const handleChange1 = (event, id) => {\r\n        subjects.find(x=>x.id == id).isChecked = event.target.checked;\r\n        props.required(subjects.filter(x=>x.isChecked).length > 0);\r\n    };\r\n  \r\n  props.required(subjects.filter(x=>x.isChecked).length > 0);\r\n\r\n  return (\r\n      <div style={{ backgroundColor: '#ffffff', \r\n                    borderTop: '1px solid #dddddd', \r\n                    borderLeft: '1px solid #dddddd', \r\n                    borderRight: '1px solid #dddddd', \r\n                    borderRadius: 0, \r\n                    marginTop: 20,\r\n                    marginBottom: 20,\r\n                    padding: '0px 0px 0px 0px',}}>\r\n          {subjects.filter(x=>x.testId == cbtId).map((x, i) => {\r\n              return (\r\n                <div key={x.id} style={{ borderBottom: '1px solid #eeeeee'}}>\r\n                    <FormControlLabel\r\n                        label={<Typography children={x.subjectName} variant=\"subtitle2\"/>}\r\n                        control={<Checkbox \r\n                                    style={{ marginLeft: '20px'}} \r\n                                    defaultChecked={x.isChecked}\r\n                                    onChange={(event) => handleChange1(event, x.id)}/>}/>\r\n                </div>\r\n              );\r\n          })}\r\n    </div>\r\n  );\r\n}","import * as React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { Typography } from '@mui/material';\r\n\r\nexport default function TestCountSelector(props) {\r\n    const cbtId = props.cbtId;\r\n    const testTypes = props.testTypes;\r\n    let current = testTypes.find(x=>x.isChecked).count;\r\n\r\n    const radioChanged = (event) => {\r\n        testTypes.map(x => x.isChecked = false);\r\n        testTypes.find(x=>x.id == event.target.id).isChecked = event.target.checked;\r\n    };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: '#ffffff', \r\n                  borderTop: '1px solid #dddddd', \r\n                  borderLeft: '1px solid #dddddd', \r\n                  borderRight: '1px solid #dddddd', \r\n                  borderRadius: 0, \r\n                  marginTop: 20,\r\n                  marginBottom: 20,\r\n                  padding: '0px 0px 0px 0px',}}>\r\n        <RadioGroup\r\n            aria-label=\"gender\"\r\n            name=\"radio-buttons-group\"\r\n            defaultValue={current}\r\n            onChange={(event) => radioChanged(event)}>\r\n            {testTypes.map((x, i) => {\r\n                return (\r\n                    <div key={x.id} style={{ borderBottom: '1px solid #eeeeee'}}>\r\n                        <FormControlLabel\r\n                            label={<Typography children={`(${x.count}) ${x.comment}`} variant=\"subtitle2\"/>}\r\n                            control={<Radio \r\n                                        id={x.id}\r\n                                        value={x.count}\r\n                                        style={{ marginLeft: '20px'}}/>}/>\r\n                    </div>\r\n                );\r\n            })}\r\n        \r\n        </RadioGroup>\r\n      \r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Box from '@mui/material/Box';\r\nimport NextButton from './NextButton';\r\nimport Step from '@mui/material/Step';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport StepContent from '@mui/material/StepContent';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Typography from '@mui/material/Typography';\r\nimport BackButton from './BackButton';\r\nimport InningCheckboxs from './InningCheckboxs';\r\nimport SubjectCheckboxs from './SubjectCheckboxs';\r\nimport TestTypeSelector from './TestTypeSelector';\r\n\r\nexport default function CbtStepper(props) {\r\n    const search = useLocation().search;\r\n    const cbtId = props.cbtId;\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [firstChecked, setFirstChecked] = React.useState(false);\r\n    const [secondChecked, setSecondChecked] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        console.log('cbtstepper useEffect loaded');\r\n    });\r\n\r\n    const firstRequired = (required) => {\r\n        setFirstChecked(required)\r\n        console.log('firstRequired', required);\r\n    }\r\n\r\n    const secondRequired = (required) => {\r\n        setSecondChecked(required)\r\n        console.log('secondRequired', required);\r\n    }\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const firstStepClick = () => {\r\n        handleNext();          \r\n    }\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    const getSelectedInning = () => {\r\n        var inning = props.innings.find(x => x.isChecked);\r\n        var count = props.innings.filter(x => x.isChecked).length; \r\n        return (\r\n            <Stack direction=\"row\" spacing={1}>\r\n                <Chip size=\"small\" label=\"회차\" color=\"success\" variant=\"outlined\"/>\r\n                <Typography variant=\"body1\">{`${inning.year}년 ${inning.inning}회`}</Typography>\r\n                <Typography variant=\"caption\" style={{ marginTop: '2px' }}>{count > 1 ? ` 포함 ${count}회차` : '단일 회차'}</Typography> \r\n            </Stack>\r\n        );\r\n    }\r\n\r\n    const getSelectedSubject = () => {\r\n        var subject = props.subjects.find(x => x.isChecked);\r\n        var count = props.subjects.filter(x => x.isChecked).length; \r\n        return (\r\n            <Stack direction=\"row\" spacing={1} style={{marginTop: '15px'}}>\r\n                <Chip size=\"small\" label=\"과목\" color=\"success\" variant=\"outlined\"/>\r\n                <Typography variant=\"body1\">{`${subject.subjectName}`}</Typography>\r\n                <Typography variant=\"caption\" style={{ marginTop: '2px' }}>{count > 1 ? ` 포함 ${count}과목` : '단일 과목'}</Typography> \r\n            </Stack>\r\n        );\r\n    }\r\n\r\n    const getTestCount = () => {\r\n        var testType = props.testTypes.find(x => x.isChecked);\r\n        return (\r\n            <Stack direction=\"row\" spacing={1} style={{marginTop: '15px'}}>\r\n                <Chip size=\"small\" label=\"출제\" color=\"success\" variant=\"outlined\"/>\r\n                <Typography variant=\"body1\">{`총 ${testType.count}문제`}</Typography>\r\n                <Typography variant=\"caption\" style={{ marginTop: '2px' }}>{testType.comment}</Typography> \r\n            </Stack>\r\n        );\r\n    }\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 538, }}>\r\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n            <Step key=\"1\">\r\n                <StepLabel children=\"회차 선택\"/>\r\n                <StepContent>\r\n                    <Box style={{marginTop: '4px', marginBottom: '14px'}}>\r\n                        <Typography children=\"회차를 선택해주세요.\" variant=\"h6\"/>\r\n                        <Typography children=\"여러 회차를 선택할 수도 있습니다.\" variant=\"caption\"/>\r\n                    </Box>\r\n                    <InningCheckboxs \r\n                        cbtId={cbtId} \r\n                        innings={props.innings} \r\n                        required={firstRequired}/>\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <NextButton \r\n                            disabled={!firstChecked}\r\n                            onClick={firstStepClick}/>\r\n                        <BackButton \r\n                            disabled={true}\r\n                            onClick={handleBack}/>\r\n                    </Box>\r\n                </StepContent>\r\n            </Step>\r\n            <Step key=\"2\">\r\n                <StepLabel children=\"과목 선택\"/>\r\n                <StepContent>\r\n                    <Box style={{marginTop: '4px', marginBottom: '14px'}}>\r\n                        <Typography children=\"과목을 선택해주세요.\" variant=\"h6\"/>\r\n                        <Typography children=\"원하는 과목만 선택할 수도 있습니다.\" variant=\"caption\"/>  \r\n                    </Box>\r\n                    <SubjectCheckboxs \r\n                        cbtId={cbtId} \r\n                        subjects={props.subjects} \r\n                        required={secondRequired}/>\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <NextButton \r\n                            disabled={!secondChecked}\r\n                            onClick={handleNext}/>\r\n                        <BackButton onClick={handleBack}/>\r\n                    </Box>\r\n                </StepContent>\r\n            </Step>\r\n            <Step key=\"3\">\r\n                <StepLabel children=\"문제 출제\"/>\r\n                <StepContent>\r\n                    <Box style={{marginTop: '4px', marginBottom: '14px'}}>\r\n                        <Typography children=\"출제 문제 유형을 선택해주세요.\" variant=\"h6\"/>\r\n                        <Typography children=\"몇 문제를 만들어 테스트 하시겠습니까?\" variant=\"caption\"/>\r\n                    </Box>\r\n                    <TestTypeSelector \r\n                        cbtId={cbtId}\r\n                        testTypes={props.testTypes}/>\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <NextButton \r\n                            onClick={handleNext}\r\n                            children=\"Finish\"/>\r\n                        <BackButton onClick={handleBack}/>\r\n                    </Box>\r\n                </StepContent>\r\n            </Step>\r\n      </Stepper>\r\n      {activeStep === 3 && (\r\n        <div style={{ backgroundColor: '#ffffff', \r\n                      borderTop: '1px solid #dddddd', \r\n                      borderLeft: '1px solid #dddddd', \r\n                      borderRight: '1px solid #dddddd', \r\n                      borderRadius: 0, \r\n                      marginTop: 20,\r\n                      marginBottom: 20,\r\n                      padding: '20px 20px 20px 20px',}}>\r\n          {getSelectedInning()}\r\n          {getSelectedSubject()}\r\n          {getTestCount()}\r\n          <br />\r\n          <Button variant=\"contained\" size=\"small\" onClick={props.start} sx={{ mt: 1, mr: 1 }}>\r\n            시작\r\n          </Button>\r\n          <Button onClick={handleReset} size=\"small\" sx={{ mt: 1, mr: 1 }}>\r\n            다시 설정\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </Box>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport { IconButton } from '@mui/material';\r\n\r\nexport default function ResetIconButton(props) {\r\n    const icon = <RefreshIcon/>\r\n    return (\r\n        <IconButton \r\n            {...props}\r\n            size=\"small\"\r\n            children={icon}/>\r\n    );\r\n}","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { load } from 'js-yaml';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Box from '@mui/material/Box';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Stack  from '@mui/material/Stack';\r\nimport Paper  from '@mui/material/Paper';\r\nimport Typography  from '@mui/material/Typography';\r\nimport CbtStepper from '../components/cbt/CbtStepper';\r\nimport ResetIconButton from '../components/cbt/ResetIconButton';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\nexport default function Cbt(props) {\r\n    const history = useHistory();\r\n\r\n    const [text, setText] = React.useState(null);\r\n    const [answer, setAnswer] = React.useState(-1);\r\n    const [innings, setInnings] = React.useState([]);\r\n    const [subjects, setSubjects] = React.useState([]);\r\n    const [testTypes, setTestTypes] = React.useState([]);\r\n    const [stepCompleted, setStepCompleted] = React.useState(false);\r\n    const cbtId = props.cbtId;\r\n    \r\n    let currentSubject = '';\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/0/202101.yaml')\r\n        .then(res => res.blob())\r\n        .then(blob => blob.text())\r\n        .then(res => {\r\n            setText(load(res));\r\n        });\r\n\r\n        fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/innings.yaml')\r\n            .then(res => res.blob())\r\n            .then(blob => blob.text())\r\n            .then(res => {\r\n                console.log('inning loaded', cbtId);\r\n                let _innings = load(res).filter(x => x.testId == cbtId);\r\n                setInnings(_innings);\r\n            });\r\n\r\n        fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/subjects.yaml')\r\n            .then(res => res.blob())\r\n            .then(blob => blob.text())\r\n            .then(res => {\r\n                let _subjects = load(res).filter(x => x.testId == cbtId);\r\n                setSubjects(_subjects);\r\n            });\r\n\r\n        fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/testTypes.yaml')\r\n            .then(res => res.blob())\r\n            .then(blob => blob.text())\r\n            .then(res => {\r\n                let _testTypes = load(res).filter(x => x.testId == cbtId);\r\n                setTestTypes(_testTypes);\r\n            });\r\n    }, []);\r\n\r\n    function answerChecked(event, id) {\r\n\r\n    }\r\n      \r\n    function initItemsTemplate(items) {\r\n        return items.map((answer, i) => {\r\n            return (\r\n                <Box key={i}>\r\n                    <Box className=\"papar-answer-content\" style={{margin: '0px 15px 0px 15px'}}>\r\n                        <FormControlLabel\r\n                            label={\r\n                                <Typography key={i.toString()} variant=\"body2\"\r\n                                    style={{ margin: '2px 0px 0px 0px' }}\r\n                                    children={`${answer.example}`}/>}\r\n                            control={<Checkbox \r\n                                         defaultChecked={answer.isChecked}\r\n                                         style={{ marginLeft: '0px'}} \r\n                                         onChange={(event) => answerChecked(event, answer.id)}/>}/>\r\n                        \r\n                    </Box>\r\n                </Box>\r\n            );\r\n        })\r\n    }\r\n\r\n    function start() {\r\n        var testType = testTypes.find(x => x.isChecked);\r\n        var allowSubjects = subjects.filter(x=>x.isChecked).map((s) => { return s.sort } );\r\n        sessionStorage.setItem('testTypes', testType.count);\r\n        sessionStorage.setItem('subjects', allowSubjects);\r\n        history.push(`/cbt/test/id=${cbtId}`);\r\n    }\r\n\r\n    return (\r\n        <Box style={{ minWidth: '200px', maxWidth: '600px', borderRight: '1px solid #dddddd', backgroundColor: '#f7f7f7' }}>\r\n\r\n\r\n            <div style={{backgroundColor: 'rgba(255, 255, 255, 0.95)', borderBottom: '1px solid #dddddd', padding: '4px 24px 4px 24px', height: '36px', position: 'sticky', top: 0, zIndex: 9999 }}>\r\n                <Stack direction=\"row\">\r\n                    <Typography variant=\"h7\" children={props.title} style={{marginTop: '8px'}}/>\r\n                </Stack>\r\n            </div>\r\n\r\n                {!stepCompleted ? \r\n                    <Box margin={3}>\r\n                        <CbtStepper \r\n                            cbtId={cbtId}\r\n                            innings={innings}\r\n                            subjects={subjects}\r\n                            testTypes={testTypes}\r\n                            start={start}/>\r\n                    </Box>\r\n                : null}\r\n        </Box>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { load } from 'js-yaml';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Box from '@mui/material/Box';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Grid  from '@mui/material/Grid';\r\nimport Stack  from '@mui/material/Stack';\r\nimport Paper  from '@mui/material/Paper';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport Typography  from '@mui/material/Typography';\r\nimport CbtStepper from '../components/cbt/CbtStepper';\r\nimport ResetIconButton from '../components/cbt/ResetIconButton';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\nexport default function Test(props) {\r\n    const history = useHistory();\r\n    \r\n    const [text, setText] = React.useState(null);\r\n    const cbtId = props.cbtId;\r\n    let currentSubject = '';\r\n    \r\n    const testCount = sessionStorage.getItem('testTypes');\r\n    const subjects = sessionStorage.getItem('subjects');\r\n    console.log('subjects: ',subjects);\r\n    console.log('size: ',testCount);\r\n\r\n    React.useEffect(() => {\r\n        console.log('cbt useEffect loaded');\r\n\r\n        fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/0/202101.yaml')\r\n        .then(res => res.blob())\r\n        .then(blob => blob.text())\r\n        .then(res => {\r\n            setText(load(res));\r\n        });\r\n    }, []);\r\n\r\n    function answerChecked(event, id) {\r\n\r\n    }\r\n      \r\n    function initItemsTemplate(items) {\r\n        return items.map((answer, i) => {\r\n            return (\r\n                <FormControlLabel key={i} className=\"papar-answer-content\" style={{margin: '0px 15px 0px 15px'}}\r\n                    label={\r\n                        <Typography key={i.toString()} variant=\"body2\"\r\n                            style={{ margin: '2px 0px 0px 0px' }}\r\n                            children={`${i + 1}. ${answer.example}`}/>}\r\n                    control={<Checkbox \r\n                        defaultChecked={answer.isChecked}\r\n                        style={{ marginLeft: '0px'}} \r\n                        onChange={(event) => answerChecked(event, answer.id)}/>}/>\r\n                        \r\n            );\r\n        })\r\n    }\r\n \r\n    function getAnswer(answers) {\r\n        let answer = -1;\r\n        answers.map((x, i) => {\r\n            if(x.isAnswer === 'y') {\r\n                answer = i + 1;\r\n            }\r\n        });\r\n        return answer;\r\n    }\r\n\r\n    function getSubject(subjectName) {\r\n        currentSubject = subjectName;\r\n        return subjectName;\r\n    }\r\n\r\n    function restart() {\r\n        history.push(`/cbt/id=${cbtId}`);\r\n    }\r\n\r\n    return (\r\n        <Box style={{ minWidth: '200px', maxWidth: '600px', borderRight: '1px solid #dddddd', backgroundColor: '#f7f7f7' }}>\r\n\r\n            <div style={{backgroundColor: 'rgba(255, 255, 255, 0.95)', borderBottom: '1px solid #dddddd', padding: '4px 24px 4px 24px', height: '36px', position: 'sticky', top: 0, zIndex: 9999 }}>\r\n                <Stack direction=\"row\">\r\n                    <Typography variant=\"h7\" children={props.title} style={{marginTop: '8px'}}/>\r\n                    <Box sx={{ flexGrow: 1 }} />\r\n                    <ResetIconButton onClick={restart}/>\r\n                </Stack>\r\n            </div>\r\n            <Box margin={0, 0, 0, 0}>\r\n                {text == null ? null\r\n                :\r\n                    text.filter(x=>subjects.includes(x.subject)).slice(0, testCount).map((item, i) => {\r\n                        return (\r\n                            <Box key={item.seq}>\r\n                                {currentSubject != item.subjectName ?\r\n                                    <Box style={{ margin: '10px 25px 0px 0px', textAlign: 'right' }}>\r\n                                        <Typography \r\n                                            children={`과목: ${getSubject(item.subjectName)}`}\r\n                                            variant=\"caption\"/>\r\n                                    </Box>\r\n                                    : null\r\n                                }\r\n                                <div className=\"paper-question\"\r\n                                    style={{\r\n                                        border: ''\r\n                                    }}>\r\n                                    <Box className=\"papar-question-content\">\r\n                                        <Typography variant=\"body1\" children={`${i + 1}. ${item.question}`}/>\r\n                                    </Box>\r\n                                    <Box>\r\n                                        {item.infos != null ? \r\n                                            item.infos.map((info, i) => {\r\n                                                return (\r\n                                                    <Box key={i}>\r\n                                                        <Box className=\"papar-question-content\">\r\n                                                            <img src={info.src} style={{maxWidth: '400px'}}/>\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                );\r\n                                            })\r\n                                            : null\r\n                                        }\r\n                                    </Box>\r\n                                    <FormGroup>\r\n                                        {initItemsTemplate(item.answers)}\r\n                                    </FormGroup>\r\n                                    <Box style={{ height: '10px'}}/>\r\n                                    <Box className=\"papar-question-content\" style={{display: 'none'}}>\r\n                                        <Typography>\r\n                                            정답 <span style={{color: '#ffffff'}}>{getAnswer(item.answers)}</span>\r\n                                        </Typography>\r\n                                    </Box>\r\n                                </div>\r\n                            </Box>\r\n                        );\r\n                    })\r\n                }\r\n            </Box>\r\n\r\n            <div style={{height: '60px'}}/>\r\n        </Box>\r\n    );\r\n}\r\n","export default function Dashboard(props) {\r\n    return (\r\n        <div>Dashboard</div>\r\n    );\r\n}","import { alertTitleClasses } from '@mui/material';\r\nimport React from 'react';\r\nimport Button from \"@mui/material/Button\";\r\nimport GoogleLoginBtn from './GoogleLoginBtn.jsx';\r\n\r\nexport default function Login(props) {\r\n\r\n    window.location.href = \"https://ncoreapi.azurewebsites.net/Identity/Account/Login?ReturnUrl=~/cbt\";\r\n    const loginClick = (e) => {\r\n    }\r\n\r\n    return (\r\n        <>\r\n        </>\r\n        // <div>\r\n        //     <h1>로그인</h1>\r\n        //     <Button \r\n        //         variant=\"contained\"\r\n        //         onClick={loginClick}\r\n        //         children=\"로그인\"/>\r\n        // </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Completed(props) {\r\n    let history = useHistory();\r\n    const cookies = new Cookies();\r\n    const location = useLocation();\r\n    let id = new URLSearchParams(location.search).get('id');\r\n    console.log('ID', id);\r\n    \r\n    cookies.set('.cbt.devncore.org.authentication.session', id);\r\n    const value = cookies.get('.cbt.devncore.org.authentication.session');\r\n\r\n    history.push(`/`);\r\n\r\n    console.log(value);\r\n    return (\r\n        <>\r\n            Authentication....\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport default function Profile(props) {\r\n    const [userInfo, setUserInfo] = React.useState({}); \r\n    const [examResult, SetExamResult] = React.useState({});\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    \r\n    const id = new URLSearchParams(location.search).get('id');\r\n    console.log('ID: ', id);\r\n\r\n    React.useEffect(() => {\r\n\r\n        const data = {\r\n            \"id\": id,\r\n            \"userName\": \"string\",\r\n            \"email\": \"string\",\r\n            \"blog\": \"string\",\r\n            \"gitHubId\": \"string\",\r\n            \"school\": \"string\",\r\n            \"name\": \"string\",\r\n            \"userId\": \"string\"\r\n            \r\n        };\r\n\r\n        const data2 = {\r\n            \"seq\": 0,\r\n            \"userId\": id,\r\n            \"subject\": \"string\",\r\n            \"ining\": 0,\r\n            \"elective\": \"string\",\r\n            \"problemCount\": 0,\r\n            \"resultCount\": 0,\r\n            \"created\": \"2021-12-05T13:43:14.151Z\"\r\n          }\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Credentials': '*',\r\n                'Access-Control-Allow-Methods': '*',\r\n            }\r\n        };\r\n        \r\n        Axios.post(process.env.SERVICE_URL + '/api/ExamResult/getExamResult', data2, requestOptions)\r\n            .then(function (response) {\r\n                const eRes = response.data;\r\n                console.log('exam: ', response.data);\r\n                SetExamResult({ \r\n                    seq: eRes.seq,\r\n                    userId: eRes.userId,\r\n                    subject: eRes.subject,\r\n                    ining: eRes.ining,\r\n                    elective: eRes.elective,\r\n                    problemCount: eRes.problemCount,\r\n                    resultCount: eRes.resultCount,\r\n                    created: eRes.created\r\n                });\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n\r\n          \r\n        console.log('data1: ', data);\r\n\r\n        Axios.post(process.env.SERVICE_URL + '/api/Account/getLoginInfo', data, requestOptions)\r\n            .then(function (response) {\r\n                const data = response.data;\r\n                setUserInfo({ \r\n                    userName: data.userName,\r\n                    email: data.email,\r\n                    id: data.id,\r\n                    phone: data.phone,\r\n                    \r\n\r\n                });\r\n            console.log('datas');\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    }, []);\r\n\r\n    const editClick = (e) => {\r\n        history.push(`/profile/update?id=${id}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            사용자 정보\r\n            {userInfo != null ? \r\n                <div>\r\n                    <div>{userInfo.id} {userInfo.userName} {userInfo.phone}</div>\r\n                    <div> {userInfo.blog} {userInfo.gitHubId} {userInfo.school}</div>\r\n                    <div> {userInfo.name} {userInfo.userId}</div>\r\n                </div>\r\n            : null\r\n            }\r\n            시험결과\r\n            {examResult != null ?\r\n                <div>\r\n                    <div>{examResult.seq} {examResult.userId} {examResult.subject}</div>\r\n                </div>\r\n            : null\r\n            }\r\n            <Button size=\"small\" variant=\"outlined\" onClick={editClick}>수정</Button>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport default function ProfileUpdate(props) {\r\n    const [userInfo, setUserInfo] = React.useState(null); \r\n    const location = useLocation();\r\n    const id = new URLSearchParams(location.search).get('id');\r\n    console.log('ID: ', id);\r\n\r\n    const [name, setName] = React.useState('james');\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Credentials': '*',\r\n            'Access-Control-Allow-Methods': '*',\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n\r\n        const data = {\r\n            \"id\": id,\r\n            \"userName\": \"string\",\r\n            \"email\": \"string\",\r\n            \"phone\": \"string\",\r\n            \"name\": \"string\"\r\n        };\r\n        console.log(data);\r\n\r\n        Axios.post(process.env.SERVICE_URL + '/api/Account/getUser', data, requestOptions)\r\n            .then(function (response) {\r\n                const data = response.data;\r\n                setUserInfo({ \r\n                    userName: data.userName,\r\n                    email: data.email,\r\n                    id: data.id,\r\n                    phone: data.phone,\r\n                    aboutMe: data.aboutMe\r\n                });\r\n                console.log('Users:', userInfo);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    }, []);\r\n\r\n    const userNameChanged = (e) => setUserInfo({...userInfo, userName: e.target.value});\r\n    const phoneChanged = (e) => setUserInfo({...userInfo, phone: e.target.value});\r\n    const aboutMeChanged = (e) => setUserInfo({...userInfo, aboutMe: e.target.value});\r\n\r\n    const saveClick = (e) => {\r\n        Axios.post(process.env.SERVICE_URL + '/api/Account/updateUser', userInfo, requestOptions)\r\n            .then(function (response) {\r\n                const data = response.data;\r\n                setUserInfo({ \r\n                    userName: userInfo.userName,\r\n                    email: userInfo.email,\r\n                    id: userInfo.id,\r\n                    phone: userInfo.phone,\r\n                    name: userInfo.name,\r\n                });\r\n                console.log('Users:', userInfo);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    }\r\n\r\n    return (\r\n        <Stack style={{padding: 20, maxWidth: 600}} spacing={1}>\r\n            {userInfo != null ?\r\n                <>\r\n                    <div>{userInfo[\"email\"]}</div>\r\n                    <div>{userInfo[\"phone\"]}</div>\r\n                    <TextField required\r\n                        size=\"small\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"userName\"\r\n                        variant=\"outlined\"\r\n                        defaultValue={userInfo[\"userName\"]}\r\n                        onChange={userNameChanged}/>\r\n                    <TextField required\r\n                        size=\"small\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"phone\"\r\n                        variant=\"outlined\"\r\n                        defaultValue={userInfo[\"phone\"]}\r\n                        onChange={phoneChanged}/>\r\n                    <TextField required\r\n                        size=\"small\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"aboutMe\"\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows=\"4\"\r\n                        defaultValue={userInfo[\"aboutMe\"]}\r\n                        onChange={aboutMeChanged}/>\r\n                    <Button children=\"버튼\" onClick={saveClick}/>\r\n                </>\r\n                : null\r\n            }\r\n        </Stack>\r\n    );\r\n}\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Badge from '@mui/material/Badge';\r\nimport FeaturedPlayListIcon from '@mui/icons-material/FeaturedPlayList';\r\nimport { Stack } from \"@mui/material\";\r\n\r\nexport default function UserProfileBox(props) {\r\n    const { user, index } = props;\r\n\r\n    const userClick = (e, user) => {\r\n        props.userClick(e, user);\r\n    };\r\n\r\n    return(\r\n        <Grid key={user.id} item lg={3} md={4} sm={6} xs={12}>                        \r\n            <Paper\r\n                variant=\"outlined\" \r\n                style={{margin: '0px 0px 10px 10px', padding: '10px 10px 10px 10px', borderRadius: 8}}\r\n                onClick={(e) => userClick(e, user)}>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <img src={`./images/people${index}.png`} style={{ width: 40, borderRadius: 8, marginRight: '10px'}}/>\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                            <Stack>\r\n                                <Typography variant=\"caption\">\r\n                                    {user.userName}\r\n                                </Typography>\r\n                                \r\n                                <Typography variant=\"body2\">\r\n                                    {`${Math.floor(Math.random() * (15 - 3) + 3)}개의 자격증 보유`}\r\n                                </Typography>\r\n                            </Stack>\r\n                        </Grid>  \r\n                        <Grid item>\r\n                            <Badge badgeContent={Math.floor(Math.random() * (15 - 3) + 3)} color=\"primary\" style={{margin: 10}} fontSize=\"small\">\r\n                                <FeaturedPlayListIcon color=\"action\" fontSize=\"small\"/>\r\n                            </Badge>\r\n                        </Grid>                                                    \r\n                    </Grid>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}","import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport UserProfileBox from \"../components/users/UserProfileBox.jsx\";\r\n\r\n\r\nexport default function Users(props) {\r\n    \r\n    const cookies = new Cookies();\r\n    const value = cookies.get('.cbt.devncore.org.authentication.session');\r\n    const [users, setUsers] = React.useState([]); \r\n    let history = useHistory();\r\n\r\n    React.useEffect(() => {\r\n\r\n        const data = {\r\n            \"id\": \"string\",\r\n            \"userName\": \"string\",\r\n            \"email\": \"string\",\r\n            \"blog\": \"string\",\r\n            \"gitHubId\": \"string\",\r\n            \"school\": \"string\",\r\n            \"name\": \"string\",\r\n            \"userId\": \"string\"\r\n        };\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Credentials': '*',\r\n                'Access-Control-Allow-Methods': '*',\r\n                \".cbt.devncore.org.authentication.session\": value\r\n            }\r\n        };\r\n\r\n        console.log(requestOptions);\r\n\r\n        Axios.post(process.env.SERVICE_URL + '/api/Account/getUsers', data, requestOptions)\r\n            .then(function (response) {\r\n                const data = response.data;\r\n                let users = data.map(user => {\r\n                    return { \r\n                        id: user.id,\r\n                        userName: user.userName,\r\n                        userId: data.UserId,\r\n                        email: data.email,\r\n                        phone: data.phone,\r\n                        name: data.name,\r\n                        school: data.school,\r\n                        gitHubId: data.gitHubId,\r\n                        blog: data.blog\r\n                    }\r\n                });\r\n                setUsers(users);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    }, []);\r\n\r\n    const userClick = (e, user) => {\r\n        history.push(`/profile?id=${user.id}`);\r\n    }\r\n\r\n    return (\r\n        <Grid container style={{maxWidth: 1200}} style={{padding: '10px 10px 10px 0px'}}>\r\n             \r\n            {users.map((user, index) => {\r\n                return (\r\n                    <UserProfileBox user={user} index={index} userClick={userClick}/>\r\n                );\r\n            })}\r\n        </Grid>\r\n    );\r\n}","\r\nimport * as React from 'react';\r\nimport { Route } from 'react-router';\r\n// import { makeStyles, useTheme } from \"@mui/styles\";\r\nimport { load } from 'js-yaml';\r\nimport { styled } from '@mui/material/styles';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport TopLayer from '../components/portal/TopLayer';\r\nimport LeftLayer from '../components/portal/LeftLayer';\r\n\r\nimport '../design/default.css';\r\n\r\nimport Cbt from '../pages/Cbt';\r\nimport Test from '../pages/Test';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport Login from './Login.jsx';\r\nimport Completed from \"./Completed.jsx\";\r\nimport Profile from \"../pages/Profile.jsx\";\r\nimport ProfileUpdate from \"../pages/ProfileUpdate.jsx\";\r\nimport Users from \"../pages/Users.jsx\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n      // primary: {\r\n      //   // Purple and green play nicely together.\r\n      //   main: '#56dbc5',\r\n      // },\r\n      // secondary: {\r\n      //   // This is green.A700 as hex.\r\n      //   main: '#f5d142',\r\n      // },\r\n    },\r\n  });\r\n\r\nexport default function Portal(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [titles, setTitles] = React.useState(null);\r\n    \r\n    React.useEffect(() => {\r\n        if (titles == null) {\r\n            fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/titles.yaml')\r\n                .then(res => res.blob())\r\n                .then(blob => blob.text())\r\n                .then(res => {\r\n                    setTitles(load(res));\r\n                    console.log('load titles');\r\n                    });\r\n        }\r\n    });\r\n\r\n    const openChanged = (changedValue) => {\r\n        setOpen(changedValue);\r\n    }\r\n\r\n        \r\n    function getName(id) {\r\n        if(titles != null)\r\n        {\r\n            console.log('getName: ', id);\r\n            return titles.filter(x=>x.id.toString() == id.toString())[0].title;\r\n        }\r\n        return \"...\";\r\n    }\r\n\r\n    const Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\r\n        ({ theme, open }) => ({\r\n          overflowY: 'hidden',\r\n          flexGrow: 1,\r\n          padding: theme.spacing(0),\r\n          transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n          }),\r\n          marginLeft: `-${drawerWidth}px`,\r\n          ...(open && {\r\n            transition: theme.transitions.create('margin', {\r\n              easing: theme.transitions.easing.easeOut,\r\n              duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: 0,\r\n          }),\r\n        }),\r\n      );\r\n\r\n    const getCbt = (cbtId) => {\r\n        return <Cbt cbtId={cbtId} title={getName(cbtId)}/>;\r\n    }\r\n\r\n    const getCbtTest = (cbtId) => {\r\n        console.log('getCbtTest');\r\n        return <Test cbtId={cbtId} title={getName(cbtId)}/>;\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={'root'}>\r\n                <div className={'drawerDiv'}>\r\n                    <TopLayer open={open} \r\n                              openChanged={openChanged} \r\n                              style={{ zIndex: 9999 }}/>    \r\n                    <div className={'frame'}>\r\n                        <LeftLayer open={open}/>\r\n                        <Main open={open}>\r\n                            <Route path='/login' component={Login}/>       \r\n                            <Route path='/cbt/id=0' render={() => getCbt('0')}/>\r\n                            <Route path='/cbt/id=1' render={() => getCbt('1')}/>\r\n                            <Route path='/cbt/id=2' render={() => getCbt('2')}/>\r\n                            <Route path='/cbt/id=3' render={() => getCbt('3')}/>\r\n                            <Route path='/cbt/id=4' render={() => getCbt('4')}/>\r\n                            <Route path='/cbt/id=5' render={() => getCbt('5')}/>\r\n                            <Route path='/cbt/id=6' render={() => getCbt('6')}/>\r\n                            <Route path='/cbt/id=7' render={() => getCbt('7')}/>\r\n                            <Route path='/cbt/test/id=0' render={() => getCbtTest('0')}/>\r\n                            <Route path='/dashboard' component={Dashboard}/>  \r\n                            <Route exact path='/profile' component={Profile}/>\r\n                            <Route path='/profile/update' component={ProfileUpdate}/>\r\n                            <Route path='/users' component={Users}/>\r\n                            <Route path='/completed' component={Completed}/>\r\n                            \r\n                        </Main>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Portal from './apps/Portal';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Portal/>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}