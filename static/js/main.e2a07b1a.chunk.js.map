{"version":3,"sources":["reportWebVitals.js","components/portal/MenuButton.jsx","components/portal/MenuTabs.jsx","components/portal/TopLayer.jsx","components/portal/MenuTreeView.jsx","components/portal/LeftMenuHeader.jsx","components/portal/LeftLayer.jsx","components/cbt/NextButton.jsx","components/cbt/BackButton.jsx","components/cbt/InningCheckboxs.jsx","components/cbt/SubjectCheckboxs.jsx","components/cbt/TestTypeSelector.jsx","components/cbt/CbtStepper.jsx","components/cbt/ResetIconButton.jsx","pages/Cbt.jsx","pages/Test.jsx","pages/Dashboard.jsx","apps/Portal.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MenuButton","props","open","menuClick","IconButton","size","edge","color","sx","mr","onClick","CustomizedTabs","Box","width","Button","variant","children","style","backgroundColor","TopLayer","openChanged","AppBar","position","elevation","zIndex","Toolbar","flexGrow","display","xs","md","MinusSquare","SvgIcon","fontSize","height","d","PlusSquare","CloseSquare","TransitionComponent","useSpring","from","opacity","transform","to","in","div","Collapse","StyledTreeItem","styled","TreeItem","theme","treeItemClasses","iconContainer","group","marginLeft","paddingLeft","borderLeft","alpha","palette","text","primary","content","paddingTop","paddingBottom","fontFamily","join","MenuTreeView","React","setText","fetch","res","blob","load","history","useHistory","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","maxWidth","margin","overflowY","getNodes","parentId","filter","x","map","item","e","type","push","pageId","nodeId","toString","label","FireNav","List","paddingRight","minWidth","marginRight","LeftMenuHeader","component","disablePadding","ListItemButton","href","ListItemIcon","ListItemText","my","primaryTypographyProps","fontWeight","letterSpacing","LeftLayer","Drawer","flexShrink","boxSizing","anchor","Divider","NextButton","mt","BackBUtton","InningCheckboxs","cbtId","innings","required","isChecked","length","borderTop","borderRight","borderRadius","marginTop","marginBottom","padding","i","borderBottom","FormControlLabel","Typography","year","inning","control","Checkbox","defaultChecked","onChange","event","id","console","log","target","checked","handleChange1","SubjectCheckboxs","subjects","testId","subjectName","find","TestCountSelector","testTypes","current","count","RadioGroup","name","defaultValue","radioChanged","comment","Radio","value","CbtStepper","useLocation","search","useState","activeStep","setActiveStep","firstChecked","setFirstChecked","secondChecked","setSecondChecked","useEffect","handleNext","prevActiveStep","handleBack","Stepper","orientation","Step","StepLabel","StepContent","mb","disabled","Stack","direction","spacing","Chip","getSelectedInning","subject","getSelectedSubject","testType","getTestCount","start","ResetIconButton","icon","startIcon","Paper","typography","body2","textAlign","secondary","Cbt","setInnings","setSubjects","setTestTypes","stepCompleted","setStepCompleted","currentSubject","getAnswer","answers","answer","isAnswer","_innings","_subjects","_testTypes","top","Grid","container","title","className","question","infos","info","src","items","example","seq","Test","Dashboard","createTheme","main","Portal","setOpen","titles","setTitles","getName","Main","shouldForwardProp","prop","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","getCbt","ThemeProvider","changedValue","path","render","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.e2a07b1a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\n// import { makeStyles, useTheme } from \"@mui/styles\";\r\nimport { IconButton } from '@mui/material';\r\n\r\nexport default function MenuButton(props) {\r\n    const { open, menuClick } = props;\r\n    // const theme = useTheme();\r\n    // const useStyles = makeStyles((theme) => ({ }));\r\n    // const classes = useStyles();\r\n\r\n    return (\r\n        <IconButton size=\"large\"\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    sx={{ mr: 2 }}\r\n                    onClick={menuClick}>\r\n            {open ? <ChevronLeftIcon /> : <MenuIcon />}\r\n        </IconButton>\r\n    );\r\n\r\n}","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { Button } from '@mui/material';\r\n\r\nexport default function CustomizedTabs() {\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n        <Button \r\n            variant=\"raised\"\r\n            size=\"small\" \r\n            color=\"link\" \r\n            children=\"자격증\"\r\n            style={{ backgroundColor: 'transparent' }}/>\r\n            \r\n        <Button \r\n            variant=\"raised\"\r\n            size=\"small\" \r\n            color=\"link\" \r\n            children=\"프로그래밍\"\r\n            style={{ backgroundColor: 'transparent' }}/>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\n// import { makeStyles, useTheme } from \"@mui/styles\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Box from '@mui/material/Box';\r\nimport MenuButton from './MenuButton';\r\n\r\nimport MenuTabs from './MenuTabs.jsx';\r\n\r\nexport default function TopLayer(props) {\r\n    const { open, openChanged } = props;\r\n    // const theme = useTheme();\r\n    // const useStyles = makeStyles((theme) => ({ }));\r\n    // const classes = useStyles();\r\n\r\n    function menuClick() {\r\n        openChanged(!open);\r\n    }\r\n\r\n    return (\r\n        <AppBar position={'relative'} elevation={1} sx={{ zIndex: 10000 }}>\r\n            <Toolbar variant=\"dense\">\r\n                <MenuButton menuClick={menuClick}/>\r\n                <MenuTabs/>\r\n                <Box sx={{ flexGrow: 1 }} />\r\n                <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import * as React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { load } from 'js-yaml';\r\nimport PropTypes from 'prop-types';\r\nimport SvgIcon from '@mui/material/SvgIcon';\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\n\r\nfunction MinusSquare(props) {\r\n  return (\r\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14, color: '#333333' }} {...props}>\r\n      <path d=\"M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction PlusSquare(props) {\r\n  return (\r\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14, color: '#333333' }} {...props}>\r\n      <path d=\"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction CloseSquare(props) {\r\n  return (\r\n    <SvgIcon\r\n      fontSize=\"inherit\"\r\n      style={{ width: 14, height: 14, color: '#34568B' }}\r\n      {...props}\r\n    >\r\n      <path d=\"M20 5L20 19L4 19L4 5H20M20 3H4C2.89 3 2 3.89 2 5V19C2 20.11 2.89 21 4 21H20C21.11 21 22 20.11 22 19V5C22 3.89 21.11 3 20 3M18 15H6V17H18V15M10 7H6V13H10V7M12 9H18V7H12V9M18 11H12V13H18V11Z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction TransitionComponent(props) {\r\n  const style = useSpring({\r\n    from: {\r\n      opacity: 0,\r\n      transform: 'translate3d(20px,0,0)',\r\n    },\r\n    to: {\r\n      opacity: props.in ? 1 : 0,\r\n      transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <animated.div style={style}>\r\n      <Collapse {...props} />\r\n    </animated.div>\r\n  );\r\n}\r\n\r\nTransitionComponent.propTypes = {\r\n  /**\r\n   * Show the component; triggers the enter or exit states\r\n   */\r\n  in: PropTypes.bool,\r\n};\r\n\r\nconst StyledTreeItem = styled((props) => (\r\n    <TreeItem {...props} TransitionComponent={TransitionComponent} />))(({ theme }) => ({\r\n        [`& .${treeItemClasses.iconContainer}`]: {\r\n            '& .close': {\r\n                opacity: 0.3,\r\n            },\r\n        },\r\n        [`& .${treeItemClasses.group}`]: {\r\n            marginLeft: 15,\r\n            paddingLeft: 0,\r\n            borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.2)}`,\r\n        },\r\n        [`& .${treeItemClasses.content}`]: {\r\n            '& .MuiTreeItem-label': {\r\n                paddingTop: '4px',\r\n                paddingBottom: '4px',\r\n                paddingLeft: '0px',\r\n                fontSize: '12px',\r\n                marginLeft: 0,\r\n                fontFamily: [\r\n                    '-apple-system',\r\n                    'BlinkMacSystemFont',\r\n                    '\"Segoe UI\"',\r\n                    'Roboto',\r\n                    '\"Helvetica Neue\"',\r\n                    'Arial',\r\n                    'sans-serif',\r\n                    '\"Apple Color Emoji\"',\r\n                    '\"Segoe UI Emoji\"',\r\n                    '\"Segoe UI Symbol\"',\r\n                ].join(','),\r\n            },\r\n        },\r\n}));\r\n\r\nexport default function MenuTreeView(props) {\r\n    const [text, setText] = React.useState([]);\r\n    \r\n    React.useEffect(() => {\r\n      fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/menus.yaml')\r\n      .then(res => res.blob())\r\n      .then(blob => blob.text())\r\n      .then(res => {\r\n          setText(load(res));\r\n      });\r\n    }, []);\r\n    \r\n    const history = useHistory();\r\n\r\n    function menuClick(e, item) {\r\n        if(item.type === 'W') {\r\n            history.push(`/cbt/id=${item.pageId}`);\r\n        }\r\n    }\r\n\r\n    function getNodes(parentId) {\r\n        var source = text.filter(x => x.parentId === parentId).map(item => {\r\n            return (\r\n                <StyledTreeItem \r\n                    key={item.nodeId.toString()}\r\n                    onClick={(e) => menuClick(e, item)}\r\n                    nodeId={item.nodeId.toString()} \r\n                    label={item.label}>\r\n                    {getNodes(item.nodeId.toString())}\r\n                </StyledTreeItem>\r\n             );\r\n        });\r\n        return source;\r\n    } \r\n\r\n    return (\r\n        <TreeView\r\n            defaultExpanded={['1', '2', '3', '4', '5']}\r\n            defaultCollapseIcon={<MinusSquare />}\r\n            defaultExpandIcon={<PlusSquare />}\r\n            defaultEndIcon={<CloseSquare />}\r\n            sx={{ height: 264, flexGrow: 1, maxWidth: 400, margin: '0px', overflowY: 'auto' }}>\r\n            {getNodes(\"-1\")}\r\n        </TreeView>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport PlaylistAddCheckIcon from '@mui/icons-material/PlaylistAddCheck';\r\n\r\nconst FireNav = styled(List)({\r\n  '& .MuiListItemButton-root': {\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    backgroundColor: '#fcfcfc'\r\n  },\r\n  '& .MuiListItemIcon-root': {\r\n    minWidth: 0,\r\n    marginRight: 5,\r\n  },\r\n  '& .MuiSvgIcon-root': {\r\n    fontSize: 0,\r\n  },\r\n});\r\n\r\nexport default function LeftMenuHeader(props) {\r\n    return (\r\n        <FireNav component=\"nav\" disablePadding>\r\n          <ListItemButton component=\"a\" href=\"#customized-list\">\r\n              <ListItemIcon sx={{ fontSize: 20 }}><PlaylistAddCheckIcon/></ListItemIcon>\r\n              <ListItemText\r\n                sx={{ my: 0 }}\r\n                primary=\"필기시험 기출문제 목록\"\r\n                primaryTypographyProps={{\r\n                  fontSize: 14,\r\n                  fontWeight: 'medium',\r\n                  letterSpacing: 0,\r\n                }}\r\n              />\r\n            </ListItemButton>\r\n        </FireNav>\r\n    );\r\n}","import React from 'react';\r\n// import { makeStyles, useTheme } from \"@mui/styles\";\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\n\r\nimport MenuTreeView from './MenuTreeView.jsx';\r\nimport LeftMenuHeader from './LeftMenuHeader.jsx';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function LeftLayer(props) {\r\n    const { open } = props;\r\n\r\n\r\n    return (\r\n        <Drawer sx={{\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            '& .MuiDrawer-paper': {\r\n              width: drawerWidth,\r\n              boxSizing: 'border-box',\r\n              position: 'absolute',\r\n                },\r\n            }}\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}>\r\n                <LeftMenuHeader/>\r\n                <Divider />\r\n                <MenuTreeView/>\r\n        </Drawer>\r\n    );\r\n}","import Button from \"@mui/material/Button\";\r\n\r\nexport default function NextButton(props) {\r\n    const { children = 'Next' } = props;\r\n\r\n    return (\r\n        <Button \r\n            {...props} \r\n            children={children}\r\n            variant=\"contained\"\r\n            sx={{ mt: 1, mr: 1 }}/>    \r\n    );\r\n}","import Button from \"@mui/material/Button\";\r\n\r\nexport default function BackBUtton(props) {\r\n    return (\r\n        <Button \r\n            {...props} \r\n            children={\"Back\"}\r\n            sx={{ mt: 1, mr: 1 }}/>    \r\n    );\r\n}","import * as React from 'react';\r\nimport {useLocation} from \"react-router-dom\";\r\nimport Box from '@mui/material/Box';\r\nimport { load } from 'js-yaml';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { Typography } from '@mui/material';\r\n\r\nexport default function InningCheckboxs(props) {\r\n    const cbtId = props.cbtId;\r\n    const innings = props.innings;\r\n\r\n  const handleChange1 = (event, id) => {\r\n      console.log('id: ', event.target.checked);\r\n      innings.filter(x=>x.id == id)[0].isChecked = event.target.checked;\r\n      console.log('checked:', innings.filter(x=>x.isChecked).length);\r\n\r\n      props.required(innings.filter(x=>x.isChecked).length > 0);\r\n  };\r\n  props.required(innings.filter(x=>x.isChecked).length > 0);\r\n\r\n  return (\r\n    <div style={{ backgroundColor: '#ffffff', \r\n                  borderTop: '1px solid #dddddd', \r\n                  borderLeft: '1px solid #dddddd', \r\n                  borderRight: '1px solid #dddddd', \r\n                  borderRadius: 0, \r\n                  marginTop: 20,\r\n                  marginBottom: 20,\r\n                  padding: '0px 0px 0px 0px',}}>\r\n        {innings.map((x, i) => {\r\n            return (\r\n              <div key={x.id} style={{ borderBottom: '1px solid #eeeeee'}}>\r\n                  <FormControlLabel\r\n                      label={<Typography children={x.year + '년 - ' + x.inning + '회'} variant=\"subtitle2\"/>}\r\n                      control={<Checkbox \r\n                                    defaultChecked={x.isChecked}\r\n                                    style={{ marginLeft: '20px'}} \r\n                                    onChange={(event) => handleChange1(event, x.id)}/>}/>\r\n              </div>\r\n            );\r\n        })}\r\n      \r\n    </div>\r\n  );\r\n}","import * as React from 'react';\r\nimport {useLocation} from \"react-router-dom\";\r\nimport Box from '@mui/material/Box';\r\nimport { load } from 'js-yaml';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { Typography } from '@mui/material';\r\n\r\nexport default function SubjectCheckboxs(props) {\r\n    const cbtId = props.cbtId;\r\n    const subjects = props.subjects;\r\n\r\n    const handleChange1 = (event, id) => {\r\n        subjects.find(x=>x.id == id).isChecked = event.target.checked;\r\n        props.required(subjects.filter(x=>x.isChecked).length > 0);\r\n    };\r\n  \r\n  props.required(subjects.filter(x=>x.isChecked).length > 0);\r\n\r\n  return (\r\n      <div style={{ backgroundColor: '#ffffff', \r\n                    borderTop: '1px solid #dddddd', \r\n                    borderLeft: '1px solid #dddddd', \r\n                    borderRight: '1px solid #dddddd', \r\n                    borderRadius: 0, \r\n                    marginTop: 20,\r\n                    marginBottom: 20,\r\n                    padding: '0px 0px 0px 0px',}}>\r\n          {subjects.filter(x=>x.testId == cbtId).map((x, i) => {\r\n              return (\r\n                <div key={x.id} style={{ borderBottom: '1px solid #eeeeee'}}>\r\n                    <FormControlLabel\r\n                        label={<Typography children={x.subjectName} variant=\"subtitle2\"/>}\r\n                        control={<Checkbox \r\n                                    style={{ marginLeft: '20px'}} \r\n                                    defaultChecked={x.isChecked}\r\n                                    onChange={(event) => handleChange1(event, x.id)}/>}/>\r\n                </div>\r\n              );\r\n          })}\r\n    </div>\r\n  );\r\n}","import * as React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { Typography } from '@mui/material';\r\n\r\nexport default function TestCountSelector(props) {\r\n    const cbtId = props.cbtId;\r\n    const testTypes = props.testTypes;\r\n    let current = testTypes.find(x=>x.isChecked).count;\r\n\r\n    const radioChanged = (event) => {\r\n        testTypes.map(x => x.isChecked = false);\r\n        testTypes.find(x=>x.id == event.target.id).isChecked = event.target.checked;\r\n    };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: '#ffffff', \r\n                  borderTop: '1px solid #dddddd', \r\n                  borderLeft: '1px solid #dddddd', \r\n                  borderRight: '1px solid #dddddd', \r\n                  borderRadius: 0, \r\n                  marginTop: 20,\r\n                  marginBottom: 20,\r\n                  padding: '0px 0px 0px 0px',}}>\r\n        <RadioGroup\r\n            aria-label=\"gender\"\r\n            name=\"radio-buttons-group\"\r\n            defaultValue={current}\r\n            onChange={(event) => radioChanged(event)}>\r\n            {testTypes.map((x, i) => {\r\n                return (\r\n                    <div key={x.id} style={{ borderBottom: '1px solid #eeeeee'}}>\r\n                        <FormControlLabel\r\n                            label={<Typography children={`(${x.count}) ${x.comment}`} variant=\"subtitle2\"/>}\r\n                            control={<Radio \r\n                                        id={x.id}\r\n                                        value={x.count}\r\n                                        style={{ marginLeft: '20px'}}/>}/>\r\n                    </div>\r\n                );\r\n            })}\r\n        \r\n        </RadioGroup>\r\n      \r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Box from '@mui/material/Box';\r\nimport NextButton from './NextButton';\r\nimport Step from '@mui/material/Step';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport StepContent from '@mui/material/StepContent';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Typography from '@mui/material/Typography';\r\nimport BackButton from './BackButton';\r\nimport InningCheckboxs from './InningCheckboxs';\r\nimport SubjectCheckboxs from './SubjectCheckboxs';\r\nimport TestTypeSelector from './TestTypeSelector';\r\n\r\nexport default function CbtStepper(props) {\r\n    const search = useLocation().search;\r\n    const cbtId = props.cbtId;\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [firstChecked, setFirstChecked] = React.useState(false);\r\n    const [secondChecked, setSecondChecked] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        console.log('cbtstepper useEffect loaded');\r\n    });\r\n\r\n    const firstRequired = (required) => {\r\n        setFirstChecked(required)\r\n        console.log('firstRequired', required);\r\n    }\r\n\r\n    const secondRequired = (required) => {\r\n        setSecondChecked(required)\r\n        console.log('secondRequired', required);\r\n    }\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const firstStepClick = () => {\r\n        handleNext();          \r\n    }\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    const getSelectedInning = () => {\r\n        var inning = props.innings.find(x => x.isChecked);\r\n        var count = props.innings.filter(x => x.isChecked).length; \r\n        return (\r\n            <Stack direction=\"row\" spacing={1}>\r\n                <Chip size=\"small\" label=\"회차\" color=\"success\" variant=\"outlined\"/>\r\n                <Typography variant=\"body1\">{`${inning.year}년 ${inning.inning}회`}</Typography>\r\n                <Typography variant=\"caption\" style={{ marginTop: '2px' }}>{count > 1 ? ` 포함 ${count}회차` : '단일 회차'}</Typography> \r\n            </Stack>\r\n        );\r\n    }\r\n\r\n    const getSelectedSubject = () => {\r\n        var subject = props.subjects.find(x => x.isChecked);\r\n        var count = props.subjects.filter(x => x.isChecked).length; \r\n        return (\r\n            <Stack direction=\"row\" spacing={1} style={{marginTop: '15px'}}>\r\n                <Chip size=\"small\" label=\"과목\" color=\"success\" variant=\"outlined\"/>\r\n                <Typography variant=\"body1\">{`${subject.subjectName}`}</Typography>\r\n                <Typography variant=\"caption\" style={{ marginTop: '2px' }}>{count > 1 ? ` 포함 ${count}과목` : '단일 과목'}</Typography> \r\n            </Stack>\r\n        );\r\n    }\r\n\r\n    const getTestCount = () => {\r\n        var testType = props.testTypes.find(x => x.isChecked);\r\n        return (\r\n            <Stack direction=\"row\" spacing={1} style={{marginTop: '15px'}}>\r\n                <Chip size=\"small\" label=\"출제\" color=\"success\" variant=\"outlined\"/>\r\n                <Typography variant=\"body1\">{`총 ${testType.count}문제`}</Typography>\r\n                <Typography variant=\"caption\" style={{ marginTop: '2px' }}>{testType.comment}</Typography> \r\n            </Stack>\r\n        );\r\n    }\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 538, }}>\r\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n            <Step key=\"1\">\r\n                <StepLabel children=\"회차 선택\"/>\r\n                <StepContent>\r\n                    <Box style={{marginTop: '4px', marginBottom: '14px'}}>\r\n                        <Typography children=\"회차를 선택해주세요.\" variant=\"h6\"/>\r\n                        <Typography children=\"여러 회차를 선택할 수도 있습니다.\" variant=\"caption\"/>\r\n                    </Box>\r\n                    <InningCheckboxs \r\n                        cbtId={cbtId} \r\n                        innings={props.innings} \r\n                        required={firstRequired}/>\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <NextButton \r\n                            disabled={!firstChecked}\r\n                            onClick={firstStepClick}/>\r\n                        <BackButton \r\n                            disabled={true}\r\n                            onClick={handleBack}/>\r\n                    </Box>\r\n                </StepContent>\r\n            </Step>\r\n            <Step key=\"2\">\r\n                <StepLabel children=\"과목 선택\"/>\r\n                <StepContent>\r\n                    <Box style={{marginTop: '4px', marginBottom: '14px'}}>\r\n                        <Typography children=\"과목을 선택해주세요.\" variant=\"h6\"/>\r\n                        <Typography children=\"원하는 과목만 선택할 수도 있습니다.\" variant=\"caption\"/>  \r\n                    </Box>\r\n                    <SubjectCheckboxs \r\n                        cbtId={cbtId} \r\n                        subjects={props.subjects} \r\n                        required={secondRequired}/>\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <NextButton \r\n                            disabled={!secondChecked}\r\n                            onClick={handleNext}/>\r\n                        <BackButton onClick={handleBack}/>\r\n                    </Box>\r\n                </StepContent>\r\n            </Step>\r\n            <Step key=\"3\">\r\n                <StepLabel children=\"문제 출제\"/>\r\n                <StepContent>\r\n                    <Box style={{marginTop: '4px', marginBottom: '14px'}}>\r\n                        <Typography children=\"출제 문제 유형을 선택해주세요.\" variant=\"h6\"/>\r\n                        <Typography children=\"몇 문제를 만들어 테스트 하시겠습니까?\" variant=\"caption\"/>\r\n                    </Box>\r\n                    <TestTypeSelector \r\n                        cbtId={cbtId}\r\n                        testTypes={props.testTypes}/>\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <NextButton \r\n                            onClick={handleNext}\r\n                            children=\"Finish\"/>\r\n                        <BackButton onClick={handleBack}/>\r\n                    </Box>\r\n                </StepContent>\r\n            </Step>\r\n      </Stepper>\r\n      {activeStep === 3 && (\r\n        <div style={{ backgroundColor: '#ffffff', \r\n                      borderTop: '1px solid #dddddd', \r\n                      borderLeft: '1px solid #dddddd', \r\n                      borderRight: '1px solid #dddddd', \r\n                      borderRadius: 0, \r\n                      marginTop: 20,\r\n                      marginBottom: 20,\r\n                      padding: '20px 20px 20px 20px',}}>\r\n          {getSelectedInning()}\r\n          {getSelectedSubject()}\r\n          {getTestCount()}\r\n          <br />\r\n          <Button variant=\"contained\" size=\"small\" onClick={props.start} sx={{ mt: 1, mr: 1 }}>\r\n            시작\r\n          </Button>\r\n          <Button onClick={handleReset} size=\"small\" sx={{ mt: 1, mr: 1 }}>\r\n            다시 설정\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </Box>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\n\r\nexport default function ResetIconButton(props) {\r\n    const icon = <RefreshIcon/>\r\n    return (\r\n        <Button \r\n            {...props}\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            children=\"다시 설정\" \r\n            startIcon={icon}/>\r\n    );\r\n}","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { load } from 'js-yaml';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Box from '@mui/material/Box';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Grid  from '@mui/material/Grid';\r\nimport Paper  from '@mui/material/Paper';\r\nimport Typography  from '@mui/material/Typography';\r\nimport CbtStepper from '../components/cbt/CbtStepper';\r\nimport ResetIconButton from '../components/cbt/ResetIconButton';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\nexport default function Cbt(props) {\r\n    const history = useHistory();\r\n\r\n    const [text, setText] = React.useState(null);\r\n    const [answer, setAnswer] = React.useState(-1);\r\n    const [innings, setInnings] = React.useState([]);\r\n    const [subjects, setSubjects] = React.useState([]);\r\n    const [testTypes, setTestTypes] = React.useState([]);\r\n    const [stepCompleted, setStepCompleted] = React.useState(false);\r\n    const cbtId = props.cbtId;\r\n    \r\n    let currentSubject = '';\r\n\r\n    React.useEffect(() => {\r\n        console.log('cbt useEffect loaded');\r\n\r\n        fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/0/202101.yaml')\r\n        .then(res => res.blob())\r\n        .then(blob => blob.text())\r\n        .then(res => {\r\n            setText(load(res));\r\n        });\r\n\r\n        fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/innings.yaml')\r\n            .then(res => res.blob())\r\n            .then(blob => blob.text())\r\n            .then(res => {\r\n                console.log('inning loaded', cbtId);\r\n                let _innings = load(res).filter(x => x.testId == cbtId);\r\n                setInnings(_innings);\r\n            });\r\n\r\n        fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/subjects.yaml')\r\n            .then(res => res.blob())\r\n            .then(blob => blob.text())\r\n            .then(res => {\r\n                let _subjects = load(res).filter(x => x.testId == cbtId);\r\n                setSubjects(_subjects);\r\n            });\r\n\r\n        fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/testTypes.yaml')\r\n            .then(res => res.blob())\r\n            .then(blob => blob.text())\r\n            .then(res => {\r\n                let _testTypes = load(res).filter(x => x.testId == cbtId);\r\n                setTestTypes(_testTypes);\r\n            });\r\n    }, []);\r\n\r\n    function answerChecked(event, id) {\r\n\r\n    }\r\n      \r\n    function initItemsTemplate(items) {\r\n        return items.map((answer, i) => {\r\n            return (\r\n                <Box key={i}>\r\n                    <Box className=\"papar-answer-content\" style={{margin: '0px 15px 0px 15px'}}>\r\n                        <FormControlLabel\r\n                            label={\r\n                                <Typography key={i.toString()} variant=\"body2\"\r\n                                    style={{ margin: '2px 0px 0px 0px' }}\r\n                                    children={`${answer.example}`}/>}\r\n                            control={<Checkbox \r\n                                         defaultChecked={answer.isChecked}\r\n                                         style={{ marginLeft: '0px'}} \r\n                                         onChange={(event) => answerChecked(event, answer.id)}/>}/>\r\n                        \r\n                    </Box>\r\n                </Box>\r\n            );\r\n        })\r\n    }\r\n\r\n    function getAnswer(answers) {\r\n        let answer = -1;\r\n        answers.map((x, i) => {\r\n            if(x.isAnswer === 'y') {\r\n                answer = i + 1;\r\n            }\r\n        });\r\n        return answer;\r\n    }\r\n\r\n    function getSubject(subjectName) {\r\n        currentSubject = subjectName;\r\n        return subjectName;\r\n    }\r\n\r\n    function start() {\r\n        // setStepCompleted(true);\r\n        history.push(`/cbt/test/id=${cbtId}`);\r\n    }\r\n\r\n    function restart() {\r\n        setStepCompleted(false);\r\n        history.push(`cbt/test/id=${cbtId}`);\r\n    }\r\n\r\n    return (\r\n        <Box style={{ minWidth: '200px', maxWidth: '600px', borderRight: '1px solid #dddddd', backgroundColor: '#f7f7f7' }}>\r\n\r\n            <div style={{backgroundColor: 'rgba(255, 255, 255, 0.95)', borderBottom: '1px solid #dddddd', padding: '14px 24px 14px 24px', position: 'sticky', top: 0, zIndex: 9999 }}>\r\n                <Grid container>\r\n                    <Grid xs>\r\n                        <Typography variant=\"h6\" children={props.title}/>\r\n                    </Grid>\r\n                    <Grid>\r\n                        {stepCompleted ? <ResetIconButton onClick={restart}/> : null}\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </div>\r\n\r\n                {!stepCompleted ? \r\n                    <Box margin={3}>\r\n                        <CbtStepper \r\n                            cbtId={cbtId}\r\n                            innings={innings}\r\n                            subjects={subjects}\r\n                            testTypes={testTypes}\r\n                            start={start}/>\r\n                    </Box>\r\n                : null}\r\n\r\n            {stepCompleted ?\r\n                <Box margin={0, 0, 0, 0}>\r\n                    {text == null ? null\r\n                    :\r\n                        text.map((item, i) => {\r\n                            return (\r\n                                <Box key={item.seq}>\r\n                                    {currentSubject != item.subjectName ?\r\n                                        <Box style={{ margin: '10px 25px 0px 0px', textAlign: 'right' }}>\r\n                                            <Typography \r\n                                                children={`과목: ${getSubject(item.subjectName)}`}\r\n                                                variant=\"caption\"/>\r\n                                        </Box>\r\n                                        : null\r\n                                    }\r\n                                    <div className=\"paper-question\"\r\n                                        variant=\"outlined\">\r\n                                        <Box className=\"papar-question-content\">\r\n                                            <Typography variant=\"body1\" children={`${i + 1}. ${item.question}`}/>\r\n                                        </Box>\r\n                                        <Box>\r\n                                            {item.infos != null ? \r\n                                                item.infos.map((info, i) => {\r\n                                                    return (\r\n                                                        <Box key={i}>\r\n                                                            <Box className=\"papar-question-content\">\r\n                                                                <img src={info.src} style={{maxWidth: '400px'}}/>\r\n                                                            </Box>\r\n                                                        </Box>\r\n                                                    );\r\n                                                })\r\n                                                : null\r\n                                            }\r\n                                        </Box>\r\n                                        <Box>\r\n                                            {initItemsTemplate(item.answers)}\r\n                                        </Box>\r\n                                        <Box style={{ height: '10px'}}/>\r\n                                        <Box className=\"papar-question-content\" style={{display: 'none'}}>\r\n                                            <Typography>\r\n                                                정답 <span style={{color: '#ffffff'}}>{getAnswer(item.answers)}</span>\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </div>\r\n                                </Box>\r\n                            );\r\n                        })\r\n                    }\r\n                </Box>\r\n            : null}\r\n        </Box>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { load } from 'js-yaml';\r\nimport Box from '@mui/material/Box';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Grid  from '@mui/material/Grid';\r\nimport Paper  from '@mui/material/Paper';\r\nimport Typography  from '@mui/material/Typography';\r\nimport CbtStepper from '../components/cbt/CbtStepper';\r\nimport ResetIconButton from '../components/cbt/ResetIconButton';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\nexport default function Test(props) {\r\n    const [text, setText] = React.useState(null);\r\n    const [answer, setAnswer] = React.useState(-1);\r\n    const [innings, setInnings] = React.useState([]);\r\n    const [subjects, setSubjects] = React.useState([]);\r\n    const [testTypes, setTestTypes] = React.useState([]);\r\n    const [stepCompleted, setStepCompleted] = React.useState(false);\r\n    const cbtId = props.cbtId;\r\n    let currentSubject = '';\r\n\r\n    React.useEffect(() => {\r\n        console.log('cbt useEffect loaded');\r\n\r\n        fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/0/202101.yaml')\r\n        .then(res => res.blob())\r\n        .then(blob => blob.text())\r\n        .then(res => {\r\n            setText(load(res));\r\n        });\r\n\r\n        fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/innings.yaml')\r\n            .then(res => res.blob())\r\n            .then(blob => blob.text())\r\n            .then(res => {\r\n                console.log('inning loaded', cbtId);\r\n                let _innings = load(res).filter(x => x.testId == cbtId);\r\n                setInnings(_innings);\r\n            });\r\n\r\n        fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/subjects.yaml')\r\n            .then(res => res.blob())\r\n            .then(blob => blob.text())\r\n            .then(res => {\r\n                let _subjects = load(res).filter(x => x.testId == cbtId);\r\n                setSubjects(_subjects);\r\n            });\r\n\r\n        fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/testTypes.yaml')\r\n            .then(res => res.blob())\r\n            .then(blob => blob.text())\r\n            .then(res => {\r\n                let _testTypes = load(res).filter(x => x.testId == cbtId);\r\n                setTestTypes(_testTypes);\r\n            });\r\n    }, []);\r\n\r\n    function answerChecked(event, id) {\r\n\r\n    }\r\n      \r\n    function initItemsTemplate(items) {\r\n        return items.map((answer, i) => {\r\n            return (\r\n                <Box key={i}>\r\n                    <Box className=\"papar-answer-content\" style={{margin: '0px 15px 0px 15px'}}>\r\n                        <FormControlLabel\r\n                            label={\r\n                                <Typography key={i.toString()} variant=\"body2\"\r\n                                    style={{ margin: '2px 0px 0px 0px' }}\r\n                                    children={`${answer.example}`}/>}\r\n                            control={<Checkbox \r\n                                         defaultChecked={answer.isChecked}\r\n                                         style={{ marginLeft: '0px'}} \r\n                                         onChange={(event) => answerChecked(event, answer.id)}/>}/>\r\n                        \r\n                    </Box>\r\n                </Box>\r\n            );\r\n        })\r\n    }\r\n\r\n    function getAnswer(answers) {\r\n        let answer = -1;\r\n        answers.map((x, i) => {\r\n            if(x.isAnswer === 'y') {\r\n                answer = i + 1;\r\n            }\r\n        });\r\n        return answer;\r\n    }\r\n\r\n    function getSubject(subjectName) {\r\n        currentSubject = subjectName;\r\n        return subjectName;\r\n    }\r\n\r\n    function start() {\r\n        setStepCompleted(true);\r\n    }\r\n\r\n    function restart() {\r\n        setStepCompleted(false);\r\n    }\r\n\r\n    return (\r\n        <Box style={{ minWidth: '200px', maxWidth: '600px', borderRight: '1px solid #dddddd', backgroundColor: '#f7f7f7' }}>\r\n\r\n            <div style={{backgroundColor: 'rgba(255, 255, 255, 0.95)', borderBottom: '1px solid #dddddd', padding: '14px 24px 14px 24px', position: 'sticky', top: 0, zIndex: 9999 }}>\r\n                <Grid container>\r\n                    <Grid xs>\r\n                        <Typography variant=\"h6\" children={props.title}/>\r\n                    </Grid>\r\n                    <Grid>\r\n                        <ResetIconButton onClick={restart}/>\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </div>\r\n            <Box margin={0, 0, 0, 0}>\r\n                {text == null ? null\r\n                :\r\n                    text.map((item, i) => {\r\n                        return (\r\n                            <Box key={item.seq}>\r\n                                {currentSubject != item.subjectName ?\r\n                                    <Box style={{ margin: '10px 25px 0px 0px', textAlign: 'right' }}>\r\n                                        <Typography \r\n                                            children={`과목: ${getSubject(item.subjectName)}`}\r\n                                            variant=\"caption\"/>\r\n                                    </Box>\r\n                                    : null\r\n                                }\r\n                                <div className=\"paper-question\"\r\n                                    variant=\"outlined\">\r\n                                    <Box className=\"papar-question-content\">\r\n                                        <Typography variant=\"body1\" children={`${i + 1}. ${item.question}`}/>\r\n                                    </Box>\r\n                                    <Box>\r\n                                        {item.infos != null ? \r\n                                            item.infos.map((info, i) => {\r\n                                                return (\r\n                                                    <Box key={i}>\r\n                                                        <Box className=\"papar-question-content\">\r\n                                                            <img src={info.src} style={{maxWidth: '400px'}}/>\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                );\r\n                                            })\r\n                                            : null\r\n                                        }\r\n                                    </Box>\r\n                                    <Box>\r\n                                        {initItemsTemplate(item.answers)}\r\n                                    </Box>\r\n                                    <Box style={{ height: '10px'}}/>\r\n                                    <Box className=\"papar-question-content\" style={{display: 'none'}}>\r\n                                        <Typography>\r\n                                            정답 <span style={{color: '#ffffff'}}>{getAnswer(item.answers)}</span>\r\n                                        </Typography>\r\n                                    </Box>\r\n                                </div>\r\n                            </Box>\r\n                        );\r\n                    })\r\n                }\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n","export default function Dashboard(props) {\r\n    return (\r\n        <div>Dashboard</div>\r\n    );\r\n}","\r\nimport * as React from 'react';\r\nimport { Route } from 'react-router';\r\n// import { makeStyles, useTheme } from \"@mui/styles\";\r\nimport { load } from 'js-yaml';\r\nimport { styled } from '@mui/material/styles';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport TopLayer from '../components/portal/TopLayer';\r\nimport LeftLayer from '../components/portal/LeftLayer';\r\n\r\nimport '../design/default.css';\r\n\r\nimport Cbt from '../pages/Cbt';\r\nimport Test from '../pages/Test';\r\nimport Dashboard from '../pages/Dashboard';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        // Purple and green play nicely together.\r\n        main: '#56dbc5',\r\n      },\r\n      secondary: {\r\n        // This is green.A700 as hex.\r\n        main: '#f5d142',\r\n      },\r\n    },\r\n  });\r\n\r\nexport default function Portal(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [titles, setTitles] = React.useState(null);\r\n    \r\n    React.useEffect(() => {\r\n        if (titles == null) {\r\n            fetch('https://raw.githubusercontent.com/devncore/cbt/main/data/titles.yaml')\r\n                .then(res => res.blob())\r\n                .then(blob => blob.text())\r\n                .then(res => {\r\n                    setTitles(load(res));\r\n                    console.log('load titles');\r\n                    });\r\n        }\r\n    });\r\n\r\n    const openChanged = (changedValue) => {\r\n        setOpen(changedValue);\r\n    }\r\n\r\n        \r\n    function getName(id) {\r\n        if(titles != null)\r\n        {\r\n            console.log('getName: ', id);\r\n            return titles.filter(x=>x.id.toString() == id.toString())[0].title;\r\n        }\r\n        return \"...\";\r\n    }\r\n\r\n    const Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\r\n        ({ theme, open }) => ({\r\n          overflowY: 'scroll',\r\n          flexGrow: 1,\r\n          padding: theme.spacing(0),\r\n          transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n          }),\r\n          marginLeft: `-${drawerWidth}px`,\r\n          ...(open && {\r\n            transition: theme.transitions.create('margin', {\r\n              easing: theme.transitions.easing.easeOut,\r\n              duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: 0,\r\n          }),\r\n        }),\r\n      );\r\n\r\n    const getCbt = (cbtId) => {\r\n        return <Cbt cbtId={cbtId} title={getName(cbtId)}/>;\r\n    }\r\n\r\n    const getCbtTest = (cbtId) => {\r\n        console.log('getCbtTest');\r\n        return <Test cbtId={cbtId} title={getName(cbtId)}/>;\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={'root'}>\r\n                <div className={'drawerDiv'}>\r\n                    <TopLayer open={open} \r\n                              openChanged={openChanged} \r\n                              style={{ zIndex: 9999 }}/>    \r\n                    <div className={'frame'}>\r\n                        <LeftLayer open={open}/>\r\n                        <Main open={open}>\r\n                            <Route path='/cbt/id=0' render={() => getCbt('0')}/>\r\n                            <Route path='/cbt/id=1' render={() => getCbt('1')}/>\r\n                            <Route path='/cbt/id=2' render={() => getCbt('2')}/>\r\n                            <Route path='/cbt/id=3' render={() => getCbt('3')}/>\r\n                            <Route path='/cbt/id=4' render={() => getCbt('4')}/>\r\n                            <Route path='/cbt/id=5' render={() => getCbt('5')}/>\r\n                            <Route path='/cbt/id=6' render={() => getCbt('6')}/>\r\n                            <Route path='/cbt/id=7' render={() => getCbt('7')}/>\r\n                            <Route path='/cbt/test/id=0' render={() => getCbtTest('0')}/>\r\n                            <Route path='/dashboard' component={Dashboard}/>                            \r\n                        </Main>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Portal from './apps/Portal';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Portal/>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}